# docker build -f container-build/dumps/Dockerfile -t dumps:latest .
# docker build -f container-build/sdump/Dockerfile -t sdump:latest .


version: "3"

services:
  
  db:
    image: postgres:13.5-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      LANG: es_AR.UTF-8
      TZ: 'America/Argentina/Cordoba'
      POSTGRES_DB: sdump_db
    volumes:
      - sdump_pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 10

  dumps: 
    build:
      context: .
      dockerfile: container-build/dumps/Dockerfile
    restart: always
    environment:
      LANG: es_AR.UTF-8
      TZ: 'America/Argentina/Cordoba'
      LC_ALL: C
    env_file:
      - .env.dev
    volumes:
      - sdump_dumps:/srv/dumps
      - sdump_dumps_conf:/srv/dumps.conf.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h db"]
      interval: 10s
      timeout: 10s
      retries: 10
    healthcheck:
      test: /usr/bin/mysqladmin -p$$MARIADB_ROOT_PASSWORD ping
      timeout: 2s
      retries: 3
  
  sdump:
    build:
      context: .
      dockerfile: container-build/sdump/Dockerfile
    restart: always
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env.dev
    volumes:
      - .:/srv/sdump
      - sdump_dumps:/srv/dumps
      - sdump_dumps_conf:/srv/dumps.conf.d
    ports:
      - "8000:8000"
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl --fail http://0.0.0.0:8000/dumpserver/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  sdump_pgdata:
    external: true
  sdump_dumps:
    external: true
  sdump_dumps_conf:
    external: true
